(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{393:function(t,e,v){t.exports=v.p+"assets/img/game-font-1.cf8eaa4e.png"},394:function(t,e,v){t.exports=v.p+"assets/img/game-font-2.bbbaac38.png"},395:function(t,e,v){t.exports=v.p+"assets/img/game-font-3.015c2de5.png"},396:function(t,e,v){t.exports=v.p+"assets/img/game-font-4.3e0c2e59.png"},397:function(t,e,v){t.exports=v.p+"assets/img/game-font-5.7ce39631.png"},398:function(t,e,v){t.exports=v.p+"assets/img/game-font-8.1eb574a8.png"},399:function(t,e,v){t.exports=v.p+"assets/img/game-font-9.8f689532.png"},400:function(t,e,v){t.exports=v.p+"assets/img/game-font-10.9ef9b32b.png"},401:function(t,e,v){t.exports=v.p+"assets/img/game-font-11.8d6aff7a.png"},402:function(t,e,v){t.exports=v.p+"assets/img/game-font-12.808a67a5.png"},403:function(t,e,v){t.exports=v.p+"assets/img/game-font-7.776a38ab.png"},404:function(t,e,v){t.exports=v.p+"assets/img/game-font-6.2d4d47bd.png"},507:function(t,e,v){"use strict";v.r(e);var _=v(13),o=Object(_.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"如何制作一款像素字体"}},[t._v("如何制作一款像素字体")]),t._v(" "),e("p",[e("code",[t._v("2023.02.20")])]),t._v(" "),e("p",[t._v("最近几天稀里糊涂的接触到了字体设计，我觉得在游戏开发过程中如果有一款自己的像素风格字体应该是一件很棒的事情，所以我就花了几天时间专心设计了一款字体，过程中遇到了很多问题，不断解决的过程也让自己对游戏开发有了更多的认识，还是蛮享受过程的，特别是发布到"),e("code",[t._v("itch")]),t._v("上之后，看到有人下载使用，成就感油然而生。这里记录一下实现过程，如果能够帮助到你那就更好了。")]),t._v(" "),e("h3",{attrs:{id:"design-with-aseprite"}},[t._v("Design with Aseprite")]),t._v(" "),e("p",[t._v("选择一款适合自己的画图软件设计字体，我平时都是使用Aseprite，画像素图顺手些。整体设计思路是为字符增加阴影，呈现立体效果，适合用于场景中比较显著的重点位置，假设光线从上方垂直向下照射，为每个被遮挡的线条绘制阴影。首先为每个字符分配单元格大小"),e("code",[t._v("8*10pt")]),t._v("，大写字母顶格占用"),e("code",[t._v("6*8pt")]),t._v("，小写字母平均占用"),e("code",[t._v("5*6pt")]),t._v("。建议像我一样刚接触字体设计的小白看下基础知识，有个大概的理解，这东西看着简单，实际上涉及到的知识还是很广的。")]),t._v(" "),e("img",{attrs:{src:v(393),width:"50%"}}),t._v(" "),e("p",[t._v("为了突出设计感，我在字符细节设计上削减左上和右下的空间，这样起到活跃字符间联动的作用，看起来会俏皮一点。接下来就是漫长的调整过程，不断的修改，不断的在Unity中查看效果，最终达到自己满意的状态。")]),t._v(" "),e("img",{attrs:{src:v(394),width:"80%"}}),t._v(" "),e("blockquote",[e("p",[t._v("ASCII常用字符共计94个\nAaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0123456789!\"#$%&'()*+,-./:;<=>?@[]^_`{|}~")])]),t._v(" "),e("h3",{attrs:{id:"convert-png-to-ttf"}},[t._v("Convert PNG to TTF")]),t._v(" "),e("p",[t._v("全部绘制完成后，我们需要从画图软件中导出png图片进行格式转换。这里最好是了解点关于"),e("code",[t._v("typography")]),t._v("、"),e("code",[t._v("bitmap")]),t._v("、"),e("code",[t._v("ttf")]),t._v("的理论知识，方便在后续过程中调测，毕竟有时候就算google也得知道自己要怎么去描述问题啊 😁。接下来我们访问一个在线生成字体文件的网站 "),e("a",{attrs:{href:"https://yal.cc/r/20/pixelfont/",target:"_blank"}},[t._v("pixel font generator")]),t._v("，将png图片导入进去，开始设置字体参数。")]),t._v(" "),e("img",{attrs:{src:v(395),width:"80%"}}),t._v(" "),e("blockquote",[e("p",[t._v("Glyphs in image ="),e("br"),t._v("\nABCDEFGHIJKLMNOPQRSTUVWXYZ "),e("br"),t._v("\nabcdefghijklmnopqrstuvwxyz "),e("br"),t._v('\n0123456789!"# '),e("br"),t._v("\n$%&'()*+,-./:;<=>?@[]^_`{ "),e("br"),t._v("\n|}~ "),e("br")])]),t._v(" "),e("p",[t._v("// 字符位置，与你导出图片中的字符位置要匹配")]),t._v(" "),e("blockquote",[e("p",[t._v("Glyph color = opaque"),e("br")])]),t._v(" "),e("p",[t._v("// 字符颜色，因为我设计的是阴影字体这里选择opaque，如果是普通字体选择auto")]),t._v(" "),e("blockquote",[e("p",[t._v("Kerning pairs ="),e("br"),t._v("\nA j -1 "),e("br"),t._v("\n... "),e("br"),t._v("\nT acdefgijmnopqrstuvwxyz -1 "),e("br"),t._v("\n... "),e("br"),t._v("\nz j -1 "),e("br")])]),t._v(" "),e("p",[t._v("// 字符间距，调整不同字符组合的间距变化"),e("code",[t._v("{词首字符} {词尾字符} {间距}")]),t._v("，后期需要花时间反复调整的地方")]),t._v(" "),e("blockquote",[e("p",[t._v("Tile width = 8"),e("br")])]),t._v(" "),e("p",[t._v("// 字符宽度，与你绘制的字符占用空间匹配")]),t._v(" "),e("blockquote",[e("p",[t._v("Tile height = 10"),e("br")])]),t._v(" "),e("p",[t._v("// 字符高度，与你绘制的字符占用空间匹配")]),t._v(" "),e("blockquote",[e("p",[t._v("Offset X = 0"),e("br")])]),t._v(" "),e("p",[t._v("// 字符水平偏移量，字符在水平方向与左侧的偏移量，即与前一个字符的间距")]),t._v(" "),e("blockquote",[e("p",[t._v("Offset Y = 0"),e("br")])]),t._v(" "),e("p",[t._v("// 字符垂直偏移量，字符在垂直方向与上方的偏移量，即与上一个字符的间距")]),t._v(" "),e("blockquote",[e("p",[t._v("Separation X = 0"),e("br")])]),t._v(" "),e("p",[t._v("// 字符水平空间距离，字符在水平方向与左侧的空间距离，即与前一个字符占用空间的距离")]),t._v(" "),e("blockquote",[e("p",[t._v("Separation Y = 0"),e("br")])]),t._v(" "),e("p",[t._v("// 字符垂直空间距离，字符在垂直方向与上方的空间距离，即与上一个字符占用空间的距离")]),t._v(" "),e("blockquote",[e("p",[t._v("Baseline X = 0"),e("br")])]),t._v(" "),e("p",[t._v("// 不知道啥意思，建议设置为0 😂")]),t._v(" "),e("blockquote",[e("p",[t._v("Baseline = 8"),e("br")])]),t._v(" "),e("p",[t._v("// 字符基线，字符空间顶部与小写字母m底线之间的距离")]),t._v(" "),e("blockquote",[e("p",[t._v("Spacing = 0"),e("br")])]),t._v(" "),e("p",[t._v("// 字符间距，在等距字体的情况下为字符空间的距离")]),t._v(" "),e("blockquote",[e("p",[t._v("Monospace = false"),e("br")])]),t._v(" "),e("p",[t._v("// 等距字体，即所有字符占用相同的空间")]),t._v(" "),e("blockquote",[e("p",[t._v("Em Size = 1024"),e("br")])]),t._v(" "),e("p",[t._v("// 字模空间高度，em是空间的数字化定义，会根据font-size进行缩放，建议保持不变")]),t._v(" "),e("blockquote",[e("p",[t._v("Line Gap = 0"),e("br")])]),t._v(" "),e("p",[t._v("// 行距，建议保持不变，在使用时通过设置line-height调整")]),t._v(" "),e("blockquote",[e("p",[t._v("Ascent = 1024"),e("br")])]),t._v(" "),e("p",[t._v("// 顶高，Baseline向上伸展的距离")]),t._v(" "),e("blockquote",[e("p",[t._v("Descent = 0"),e("br")])]),t._v(" "),e("p",[t._v("// 底深，Baseline向下探沉的距离")]),t._v(" "),e("blockquote",[e("p",[t._v("Pixel Size = 128"),e("br")])]),t._v(" "),e("p",[t._v("// 字符大小，不知道具体算法，大概是16px/12pt对应64")]),t._v(" "),e("blockquote",[e("p",[t._v("Font Name = Look-Sodium"),e("br"),t._v("\nAuthor = Look"),e("br"),t._v("\nCopyright = (c) 2023 Look. All rights reserved."),e("br"),t._v("\nVersion = 1.0"),e("br"),t._v("\nDescription = Free shadow font for pixelart games."),e("br"),t._v("\nLisence = Creative Commons Zero v1.0 Universal"),e("br"),t._v("\nLisence Url = https://creativecommons.org/publicdomain/zero/1.0/legalcode"),e("br"),t._v("\nSample Text = THE QUICK BROWN FOX JUMPS OVER A LAZY DOG."),e("br")])]),t._v(" "),e("p",[t._v("// 填写字体版权相关信息")]),t._v(" "),e("p",[t._v("点击保存"),e("code",[t._v("Save TTF")]),t._v("，到这里生成字体文件的工作就完成了，接下来开始导入Unity吧。")]),t._v(" "),e("p",[t._v("相信我，你一定会重复很多次这个步骤！😬")]),t._v(" "),e("h3",{attrs:{id:"generate-font-asset-in-unity"}},[t._v("Generate font asset in unity")]),t._v(" "),e("p",[t._v("OK，我们已经距离成功前进了一大步，接下来我们在Unity中创建字体资产文件。")]),t._v(" "),e("p",[t._v("将保存好的字体文件拖入Unity工程目录下，右键点击文件属性设置：")]),t._v(" "),e("img",{attrs:{src:v(396),width:"50%"}}),t._v(" "),e("blockquote",[e("p",[t._v("Font Size = 8")])]),t._v(" "),e("p",[t._v("// 字体大小，这里根据你自己的情况填写吧，我试了一下好像没什么用")]),t._v(" "),e("blockquote",[e("p",[t._v("Rendering Mode = Hinted Raster")])]),t._v(" "),e("p",[t._v("// 渲染模式，因为是像素点阵字体，选择"),e("code",[t._v("Hinted Raster")]),t._v("，这种渲染模式不采用抗锯齿技术，是最清晰的渲染方式")]),t._v(" "),e("blockquote",[e("p",[t._v("Character = Dynamic")])]),t._v(" "),e("p",[t._v("// 字符集，可以选择Custom Set手动输入，我这里用动态方式可能影响性能")]),t._v(" "),e("blockquote",[e("p",[t._v("Include Font Data = true")])]),t._v(" "),e("p",[t._v("// 这里要勾选上，因为创建Font Asset时需要字符配对信息等")]),t._v(" "),e("p",[t._v("设置完成后，选择菜单 "),e("code",[t._v("Window > TextMeshPro > Font Asset Creator")]),t._v(" 开始创建字体资产。")]),t._v(" "),e("img",{attrs:{src:v(397),width:"50%"}}),t._v(" "),e("blockquote",[e("p",[t._v("Sampling Point Size = 8")])]),t._v(" "),e("p",[t._v("// 采样点大小，根据自己的字体情况设置")]),t._v(" "),e("blockquote",[e("p",[t._v("Padding = 1")])]),t._v(" "),e("p",[t._v("// 字符间距")]),t._v(" "),e("blockquote",[e("p",[t._v("Packing Method = Optimum")])]),t._v(" "),e("p",[t._v("// 生成采样图集的方法，最佳"),e("code",[t._v("Optimum")]),t._v("，最快"),e("code",[t._v("Fast")])]),t._v(" "),e("blockquote",[e("p",[t._v("Atlas Resolution = 128 * 128")])]),t._v(" "),e("p",[t._v("// 采样图集的大小，取决于你的字符数量，ASCII一般是94个字符，选择128 * 128即可")]),t._v(" "),e("blockquote",[e("p",[t._v("Character Set = ASCII")])]),t._v(" "),e("p",[t._v("// 字符集，可以自定义，也可以从文件中选取")]),t._v(" "),e("blockquote",[e("p",[t._v("Render Mode = RASTER_HINTED")])]),t._v(" "),e("p",[t._v("// 渲染字符图集的方式，"),e("code",[t._v("RASTER_HINTED")]),t._v("使用点阵方式存储且不抗锯齿，适合像素字体")]),t._v(" "),e("blockquote",[e("p",[t._v("Get Kerning Pairs = true")])]),t._v(" "),e("p",[t._v("// 提取字符组合信息")]),t._v(" "),e("p",[t._v("全部设置完成，点击"),e("code",[t._v("Generate Font Atlas > Save")]),t._v("生成并保存字体资产文件，这样全部工作就算告一段落了。")]),t._v(" "),e("h3",{attrs:{id:"update-atlas-optional"}},[t._v("Update atlas - optional")]),t._v(" "),e("p",[e("font",{staticClass:"alert"},[t._v("本章节内容可选，取决于你的字体设计是否具有艺术效果，比如阴影和边框。")])],1),t._v(" "),e("img",{attrs:{src:v(398),width:"50%"}}),t._v(" "),e("p",[t._v("在刚刚生成的字体资产文件属性窗口，点击右上角的"),e("code",[t._v("Extract Atlas")]),t._v("，\n会在当前文件夹内生成一个"),e("code",[t._v("atlas")]),t._v("文件，该文件是你的字体采样图集，内容如下：")]),t._v(" "),e("p",[e("img",{attrs:{src:v(399),width:"48%"}}),t._v(" "),e("img",{attrs:{src:v(400),width:"48%"}})]),t._v(" "),e("p",[t._v("左侧图片是Unity生成的字符采样图集，可以看到字符和阴影混合在一起了，需要你在画图软件中替换每一个字符为你想要的样子如右图。这里的操作非常花费时间，每次调整都要花费半个小时，不知道有没有更好的办法处理。😳")]),t._v(" "),e("p",[t._v("替换完成后，重新返回Unity，查看该文件的属性面板如下：")]),t._v(" "),e("img",{attrs:{src:v(401),width:"50%"}}),t._v(" "),e("blockquote",[e("p",[t._v("Pixels Per Unit = 32")])]),t._v(" "),e("p",[t._v("// 根据你的游戏设计设置，游戏中每个单元格的像素数量")]),t._v(" "),e("blockquote",[e("p",[t._v("Filter Mode = Point")])]),t._v(" "),e("p",[t._v("// "),e("code",[t._v("texture")]),t._v("过滤方式设置为点采样，像素纹理以紧密块状闭合，适用于像素化的精灵图像")]),t._v(" "),e("blockquote",[e("p",[t._v("Max Size = 128")])]),t._v(" "),e("p",[t._v("// 大小等于你在前一个章节中生成"),e("code",[t._v("atlas")]),t._v("的大小")]),t._v(" "),e("blockquote",[e("p",[t._v("Compression = None")])]),t._v(" "),e("p",[t._v("// 图像压缩方式，像素字体选择不压缩")]),t._v(" "),e("p",[t._v("点击"),e("code",[t._v("Apply")]),t._v("提交。")]),t._v(" "),e("img",{attrs:{src:v(402),width:"50%"}}),t._v(" "),e("p",[t._v("完成后，点击展开前面创建的字体资产文件下对应的材质文件，在属性面板上修改两个地方：")]),t._v(" "),e("blockquote",[e("p",[t._v("Font Atlas =")])]),t._v(" "),e("p",[t._v("// 在属性面板中选择刚刚替换修改好的"),e("code",[t._v("atlas")]),t._v("文件")]),t._v(" "),e("blockquote",[e("p",[t._v("Shader = TextMeshPro/Bitmap Custom Atlas")])]),t._v(" "),e("p",[t._v("// 替换"),e("code",[t._v("Shader")]),t._v("，该着色器适用于具有阴影或者边框的字体")]),t._v(" "),e("p",[t._v("到这里，我们所有的辛苦工作终于结束了。😂")]),t._v(" "),e("h3",{attrs:{id:"show-time"}},[t._v("Show time")]),t._v(" "),e("p",[t._v("一切就绪！让我们来看看自己的字体效果到底酷不酷吧！")]),t._v(" "),e("p",[t._v("在Unity场景中新建一个"),e("code",[t._v("TextMeshPro")]),t._v("文本框，"),e("code",[t._v("Font Asset")]),t._v("选择刚刚创建好的字体资产文件，调整字体样式。")]),t._v(" "),e("img",{attrs:{src:v(403),width:"50%"}}),t._v(" "),e("p",[t._v("设置完成，最终效果如下：")]),t._v(" "),e("img",{attrs:{src:v(404),width:"80%"}}),t._v(" "),e("h3",{attrs:{id:"end"}},[t._v("END")]),t._v(" "),e("p",[t._v("最后，不得不提醒你的是创建一款字体的实际工作量远远比以上这些文字看起来更复杂，我只是了解了很少的一些皮毛。就像很多事情一样，过程是痛苦的，但是结果是美好的，对吧～ 😶")]),t._v(" "),e("p",[t._v("ps: 我的字体可以在 "),e("a",{attrs:{href:"https://look-s.itch.io/",target:"_blank"}},[t._v("itch.io")]),t._v(" 上下载，欢迎分享。")]),t._v(" "),e("hr"),t._v(" "),e("h4",{attrs:{id:"文章参考链接如下"}},[t._v("文章参考链接如下：")]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.youtube.com/watch?v=Ov2XR81oVcI",target:"_blank"}},[t._v("How to make ANY pixel perfect font with Unity's Text Mesh Pro Component!")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.youtube.com/watch?v=abmNWN9M4tw",target:"_blank"}},[t._v("How to make Pixel Art Fonts!")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.lfzxb.top/unity-textmeshpro-something/",target:"_blank"}},[t._v("基于Unity TextMeshPro的图文混排和超链接功能")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://www.kodeco.com/22175776-introduction-to-textmesh-pro-in-unity",target:"_blank"}},[t._v("Introduction to textmesh pro in unity")])]),t._v(" "),e("p",[e("a",{attrs:{href:"http://designwithfontforge.com/en-US/index.html",target:"_blank"}},[t._v("Design with font forge")])]),t._v(" "),e("p",[e("a",{attrs:{href:"http://monsterfacegames.blogspot.com/2013/10/creating-pixel-font-for-your-game.html",target:"_blank"}},[t._v("Create pixel font with fontforge")])]),t._v(" "),e("p",[e("a",{attrs:{href:"https://yal.cc/r/20/pixelfont/",target:"_blank"}},[t._v("PNG to TTF online")])]),t._v(" "),e("p",[e("a",{attrs:{href:"http://derekyu.com/makegames/pixelart.html",target:"_blank"}},[t._v("Pixel Art Tutorial: Basics")])]),t._v(" "),e("div",{staticClass:"div-license"},[t._v("\n    Copyright © 2022-2023 Look. All rights reserved.\n")])])}),[],!1,null,null,null);e.default=o.exports}}]);